{"version":3,"sources":["views/Card.js","views/CardList.js","views/RobotSearch.js","Utils/ApiService.js","views/Scroll.js","views/ErrorChecker.js","views/homepage.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","robot","id","name","email","CardList","robotsArray","robots","map","index","RobotSearch","placeholder","type","onChange","SearchChange","axios","get","Scroll","children","ErrorChecker","state","hasError","error","this","setState","Component","Homepage","componentDidMount","ApiService","getAllUsers","then","response","console","log","data","onSearchChange","event","search","target","value","filter","toLowerCase","includes","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAaeA,EAVH,SAACC,GAET,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKC,IAAI,QAAQD,UAAU,YAAYE,IAAG,+BAA0BH,EAAMI,MAAMC,MAChF,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,YCObC,EAbE,SAACR,GAEd,IAAMS,EAAcT,EAAMU,OAAOC,KAAI,SAACP,EAAOQ,GACzC,OAAO,cAAC,EAAD,CAAkBR,MAAOA,GAAdQ,MAEtB,OACA,qBAAKX,UAAU,YAAf,SAEKQ,KCKMI,EAdK,SAACb,GAEjB,OACI,8BACI,uBACAC,UAAU,YACVa,YAAY,gBACZC,KAAK,SACLC,SAAUhB,EAAMiB,kB,iBCEb,M,2FANX,WAEI,OAAOC,IAAMC,IANI,iD,MCSVC,EATA,SAACpB,GAEZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAMqB,YCqBJC,E,kDAxBX,WAAYtB,GACX,IAAD,8BACI,cAAMA,IACDuB,MAAO,CACRC,UAAU,GAHlB,E,qDAOA,SAAkBC,GAEdC,KAAKC,SAAS,CAACH,UAAU,M,oBAG7B,WACI,OAAGE,KAAKH,MAAMC,SAEF,+DAGDE,KAAK1B,MAAMqB,a,GApBHO,aCuDZC,E,kDAhDf,WAAY7B,GACX,IAAD,8BACE,cAAMA,IAQR8B,kBAAoB,WAElBC,EAAWC,cAAcC,MAAK,SAACC,GAC7BC,QAAQC,IAAIF,GACZ,EAAKP,SAAS,CAACjB,OAAQwB,EAASG,WAbpC,EAiBAC,eAAiB,SAACC,GAEhB,EAAKZ,SAAS,CAACa,OAAQD,EAAME,OAAOC,SAjBpC,EAAKnB,MACL,CACEb,OAAQ,GACR8B,OAAQ,IALZ,E,0CAsBA,WAAU,IAAD,OACDG,EAASjB,KAAKH,MAAMb,OAAOiC,QAAO,SAAAvC,GACtC,OAAOA,EAAME,KAAKsC,cAAcC,SAAS,EAAKtB,MAAMiB,OAAOI,kBAI7D,OAFAT,QAAQC,IAAIO,GAGV,cAAC,EAAD,UACE,sBAAK1C,UAAU,WAAf,UAEE,qBAAKA,UAAU,QAAf,SACE,oBAAII,GAAG,YAAP,2BAGF,cAAC,EAAD,CAAaY,aAAcS,KAAKY,iBAEhC,cAAC,EAAD,UACE,cAAC,EAAD,CAAU5B,OAAQiC,e,GAzCLG,IAAMlB,WCIdmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.64b1c663.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Card= (props) =>\r\n{\r\n    return (\r\n        <div className=\"cardsRobots\">\r\n            <img alt=\"robot\" className=\"cardImage\" src={`https://robohash.org/${props.robot.id}`}/>\r\n            <h3>{props.robot.name}</h3>\r\n            <p>{props.robot.email}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\n\r\nconst CardList = (props) =>\r\n{\r\n    const robotsArray = props.robots.map((robot, index) => {\r\n        return <Card key={index} robot={robot}/>\r\n    })\r\n    return (\r\n    <div className=\"divRobots\">\r\n    \r\n        {robotsArray}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst RobotSearch = (props) =>\r\n{\r\n    return (\r\n        <div>\r\n            <input \r\n            className=\"searchBox\" \r\n            placeholder=\"Find my robot\"\r\n            type=\"search\"\r\n            onChange={props.SearchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RobotSearch;","import axios from 'axios';\r\n\r\nconst GET_SAMPLE_USERS = \"http://jsonplaceholder.typicode.com/users\";\r\n\r\nclass ApiService {\r\n\r\n    getAllUsers()\r\n    {\r\n        return axios.get(GET_SAMPLE_USERS);\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import React from \"react\";\r\nimport './homepage.css'\r\nconst Scroll = (props) =>\r\n{\r\n    return (\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorChecker extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error)\r\n    {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError)\r\n        {\r\n            return (<h1>Oooops. Something went wrong!</h1>);\r\n        }\r\n        else{\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorChecker;","import './homepage.css';\r\nimport React from 'react';\r\nimport CardList from './CardList.js';\r\nimport RobotSearch from './RobotSearch.js';\r\nimport ApiService from '../Utils/ApiService';\r\nimport Scroll from './Scroll.js';\r\nimport ErrorChecker from './ErrorChecker';\r\n\r\nclass Homepage extends React.Component {\r\nconstructor(props)\r\n{\r\n  super(props);\r\n  this.state=\r\n  {\r\n    robots: [],\r\n    search: ''\r\n  }\r\n}\r\n\r\ncomponentDidMount = () =>\r\n{\r\n  ApiService.getAllUsers().then((response) => {\r\n    console.log(response);\r\n    this.setState({robots: response.data});\r\n  })\r\n}\r\n\r\nonSearchChange = (event) =>\r\n{\r\n  this.setState({search: event.target.value})\r\n}\r\n\r\nrender (){\r\n  const filter = this.state.robots.filter(robot => {\r\n    return robot.name.toLowerCase().includes(this.state.search.toLowerCase())\r\n  })\r\n  console.log(filter);\r\n\r\n  return (\r\n    <ErrorChecker>\r\n      <div className=\"mainpage\">\r\n        {/* div for the title header */}\r\n        <div className=\"Title\">\r\n          <h1 id=\"pageTitle\">Robofriends</h1>\r\n        </div>\r\n        {/* implement searchbox */}\r\n        <RobotSearch SearchChange={this.onSearchChange}/>\r\n        {/* display cardlist and pass the value of the search */}\r\n        <Scroll>\r\n          <CardList robots={filter}/>\r\n        </Scroll>\r\n      </div> \r\n    </ErrorChecker>\r\n  );\r\n}\r\n}\r\n\r\nexport default Homepage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Homepage from './views/homepage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Homepage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}